// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: luacall.proto

#include "luacall.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_profile_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_profile_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_KBUserInfo;
}  // namespace protobuf_profile_2eproto
namespace qqnews {
class LuaNewsInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LuaNewsInfo>
      _instance;
} _LuaNewsInfo_default_instance_;
}  // namespace qqnews
namespace protobuf_luacall_2eproto {
static void InitDefaultsLuaNewsInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qqnews::_LuaNewsInfo_default_instance_;
    new (ptr) ::qqnews::LuaNewsInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qqnews::LuaNewsInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LuaNewsInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLuaNewsInfo}, {
      &protobuf_profile_2eproto::scc_info_KBUserInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LuaNewsInfo.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qqnews::LuaNewsInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qqnews::LuaNewsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qqnews::LuaNewsInfo, lua_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qqnews::LuaNewsInfo, user_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qqnews::LuaNewsInfo, test_field_),
  1,
  0,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::qqnews::LuaNewsInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::qqnews::_LuaNewsInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "luacall.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rluacall.proto\022\006qqnews\032\rprofile.proto\"X"
      "\n\013LuaNewsInfo\022\016\n\006lua_id\030\001 \002(\r\022%\n\tuser_in"
      "fo\030\002 \001(\0132\022.qqnews.KBUserInfo\022\022\n\ntest_fie"
      "ld\030\003 \001(\r"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 128);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "luacall.proto", &protobuf_RegisterTypes);
  ::protobuf_profile_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_luacall_2eproto
namespace qqnews {

// ===================================================================

void LuaNewsInfo::InitAsDefaultInstance() {
  ::qqnews::_LuaNewsInfo_default_instance_._instance.get_mutable()->user_info_ = const_cast< ::qqnews::KBUserInfo*>(
      ::qqnews::KBUserInfo::internal_default_instance());
}
void LuaNewsInfo::clear_user_info() {
  if (user_info_ != NULL) user_info_->Clear();
  clear_has_user_info();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LuaNewsInfo::kLuaIdFieldNumber;
const int LuaNewsInfo::kUserInfoFieldNumber;
const int LuaNewsInfo::kTestFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LuaNewsInfo::LuaNewsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_luacall_2eproto::scc_info_LuaNewsInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qqnews.LuaNewsInfo)
}
LuaNewsInfo::LuaNewsInfo(const LuaNewsInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_info()) {
    user_info_ = new ::qqnews::KBUserInfo(*from.user_info_);
  } else {
    user_info_ = NULL;
  }
  ::memcpy(&lua_id_, &from.lua_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&test_field_) -
    reinterpret_cast<char*>(&lua_id_)) + sizeof(test_field_));
  // @@protoc_insertion_point(copy_constructor:qqnews.LuaNewsInfo)
}

void LuaNewsInfo::SharedCtor() {
  ::memset(&user_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_field_) -
      reinterpret_cast<char*>(&user_info_)) + sizeof(test_field_));
}

LuaNewsInfo::~LuaNewsInfo() {
  // @@protoc_insertion_point(destructor:qqnews.LuaNewsInfo)
  SharedDtor();
}

void LuaNewsInfo::SharedDtor() {
  if (this != internal_default_instance()) delete user_info_;
}

void LuaNewsInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LuaNewsInfo::descriptor() {
  ::protobuf_luacall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_luacall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LuaNewsInfo& LuaNewsInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_luacall_2eproto::scc_info_LuaNewsInfo.base);
  return *internal_default_instance();
}


void LuaNewsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:qqnews.LuaNewsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(user_info_ != NULL);
    user_info_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&lua_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&test_field_) -
        reinterpret_cast<char*>(&lua_id_)) + sizeof(test_field_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LuaNewsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qqnews.LuaNewsInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 lua_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lua_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lua_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .qqnews.KBUserInfo user_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 test_field = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_test_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &test_field_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qqnews.LuaNewsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qqnews.LuaNewsInfo)
  return false;
#undef DO_
}

void LuaNewsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qqnews.LuaNewsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 lua_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->lua_id(), output);
  }

  // optional .qqnews.KBUserInfo user_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_user_info(), output);
  }

  // optional uint32 test_field = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->test_field(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qqnews.LuaNewsInfo)
}

::google::protobuf::uint8* LuaNewsInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qqnews.LuaNewsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 lua_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->lua_id(), target);
  }

  // optional .qqnews.KBUserInfo user_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_user_info(), deterministic, target);
  }

  // optional uint32 test_field = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->test_field(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qqnews.LuaNewsInfo)
  return target;
}

size_t LuaNewsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qqnews.LuaNewsInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 lua_id = 1;
  if (has_lua_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lua_id());
  }
  // optional .qqnews.KBUserInfo user_info = 2;
  if (has_user_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_info_);
  }

  // optional uint32 test_field = 3;
  if (has_test_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->test_field());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LuaNewsInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qqnews.LuaNewsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LuaNewsInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LuaNewsInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qqnews.LuaNewsInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qqnews.LuaNewsInfo)
    MergeFrom(*source);
  }
}

void LuaNewsInfo::MergeFrom(const LuaNewsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qqnews.LuaNewsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_user_info()->::qqnews::KBUserInfo::MergeFrom(from.user_info());
    }
    if (cached_has_bits & 0x00000002u) {
      lua_id_ = from.lua_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      test_field_ = from.test_field_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LuaNewsInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qqnews.LuaNewsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LuaNewsInfo::CopyFrom(const LuaNewsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qqnews.LuaNewsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LuaNewsInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void LuaNewsInfo::Swap(LuaNewsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LuaNewsInfo::InternalSwap(LuaNewsInfo* other) {
  using std::swap;
  swap(user_info_, other->user_info_);
  swap(lua_id_, other->lua_id_);
  swap(test_field_, other->test_field_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LuaNewsInfo::GetMetadata() const {
  protobuf_luacall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_luacall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace qqnews
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qqnews::LuaNewsInfo* Arena::CreateMaybeMessage< ::qqnews::LuaNewsInfo >(Arena* arena) {
  return Arena::CreateInternal< ::qqnews::LuaNewsInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
